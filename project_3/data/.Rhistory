theme(axis.title=element_text(size=14),
axis.text=element_text(size=14),
title =element_text(size=14))
return(p)
}
expression(frac(paste(sqrt(n),'(', bar(Y)[n], '-', 1, ')'), sqrt(2)))
expression(frac(paste(sqrt(n),'(', bar(Y)[n], '-', '(', 1,'-',2, '/', 9n,')', ')'), sqrt(2)))
expression(frac(paste(sqrt(n),'(', bar(Y)[n], '-', '(', 1, ')'), sqrt(2)))
expression(frac(paste(sqrt(n),'(', bar(Y)[n], '-', '(', 1, '-', ')'), sqrt(2)))
expression(frac(paste(sqrt(n),'(', bar(Y)[n], '-', '(', 1, '-', 2, ')'), sqrt(2)))
expression(frac(paste(sqrt(n),'(', bar(Y)[n], '-', '(', 1, '-', 2,'/', ')'), sqrt(2)))
expression(frac(paste(sqrt(n),'(', bar(Y)[n], '-', '(', 1, '-', 2,'/', 9n,')'), sqrt(2)))
expression(frac(paste(sqrt(n),'(', bar(Y)[n], '-', '(', 1, '-', 2,'/', 9, n,')'), sqrt(2)))
wilson_density <- function(n){
p = ggplot(mapping = aes(wilson(n))) +
geom_density() +
theme_minimal() +
xlab(expression(frac(paste(sqrt(n),'(', bar(Y)[n], '-', '(', 1,'-',2, '/', 9, n,')', ')'), sqrt(2)))) +
ylab('Density') +
labs(title = paste('n =', n)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.title=element_text(size=14),
axis.text=element_text(size=14),
title =element_text(size=14))
return(p)
}
ggarrange(wilson_density(10), wilson_density(15), wilson_density(30), wilson_density(60),wilson_density(100), wilson_density(200))
a<-function(n){
p = ggplot(mapping = aes(Y_bar(n))) +
geom_density() +
theme_minimal() +
xlab(expression(frac(paste(sqrt(n),'(', bar(Y)[n], -1, ')'), sqrt(2)))) +
ylab('Density') +
labs(title = paste('n =', n)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.title=element_text(size=14),
axis.text=element_text(size=14),
title =element_text(size=14))
return(p)
}
ggarrange(a(10), a(15), a(30), a(60),a(100), a(200))
(expression(frac(paste(sqrt(n),'(', bar(Y)[n], '-', '(', 1,'-',2, '/', 9, n,')', ')'), sqrt(2))))
i = i + 1
wilson_density(10)
ggarrange(wilson_density(10), wilson_density(15), wilson_density(30), wilson_density(60),wilson_density(100), wilson_density(200))
p = ggplot(mapping = aes(wilson(n))) +
geom_density() +
theme_minimal() +
xlab(expression(frac(paste(sqrt(n),'{', bar(Y)[n], '-', '(', 1,'-',2, '/', '(', 9, n,')', ')', '}'), sqrt(2/9)))) +
ylab('Density') +
labs(title = paste('n =', n)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.title=element_text(size=14),
axis.text=element_text(size=14),
title =element_text(size=14))
wilson_density <- function(n){
p = ggplot(mapping = aes(wilson(n))) +
geom_density() +
theme_minimal() +
xlab(expression(frac(paste(sqrt(n),'{', bar(Y)[n], '-', '(', 1,'-',2, '/', '(', 9, n,')', ')', '}'), sqrt(2/9)))) +
ylab('Density') +
labs(title = paste('n =', n)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.title=element_text(size=14),
axis.text=element_text(size=14),
title =element_text(size=14))
return(p)
}
ggarrange(wilson_density(10), wilson_density(15), wilson_density(30), wilson_density(60),wilson_density(100), wilson_density(200))
wilson_density <- function(n){
p = ggplot(mapping = aes(wilson(n))) +
geom_density() +
theme_minimal() +
xlab(expression(frac(paste(sqrt(n),'{', bar(Y)[n]^2, '-', '(', 1,'-',2, '/', '(', 9, n,')', ')', '}'), sqrt(2/9)))) +
ylab('Density') +
labs(title = paste('n =', n)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.title=element_text(size=14),
axis.text=element_text(size=14),
title =element_text(size=14))
return(p)
}
wilson_density(10)
wilson_density <- function(n){
p = ggplot(mapping = aes(wilson(n))) +
geom_density() +
theme_minimal() +
xlab(expression(frac(paste(sqrt(n),'{', bar(Y)[n]^(1/3), '-', '(', 1,'-',2, '/', '(', 9, n,')', ')', '}'), sqrt(2/9)))) +
ylab('Density') +
labs(title = paste('n =', n)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.title=element_text(size=14),
axis.text=element_text(size=14),
title =element_text(size=14))
return(p)
}
ggarrange(wilson_density(10), wilson_density(15), wilson_density(30), wilson_density(60),wilson_density(100), wilson_density(200))
wilson_density <- function(n){
p = ggplot(mapping = aes(wilson(n))) +
geom_density() +
theme_minimal() +
xlab(expression(frac(paste(sqrt(n),'{', bar(Y)[n]^1/3, '-', '(', 1,'-',2, '/', '(', 9, n,')', ')', '}'), sqrt(2/9)))) +
ylab('Density') +
labs(title = paste('n =', n)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.title=element_text(size=14),
axis.text=element_text(size=14),
title =element_text(size=14))
return(p)
}
ggarrange(a(10), a(15), a(30), a(60),a(100), a(200))
ggarrange(wilson_density(10), wilson_density(15), wilson_density(30), wilson_density(60),wilson_density(100), wilson_density(200))
shiny::runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
unique(df$City)
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
length(uniqe(df$City))
length(unque(df$City))
length(unique(df$City))
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('hw4')
runApp('hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
unique(df[City])
unique(df['City'])
length(unique(df['City']))
count(unique(df['City']))
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4')
225、7
225/7
225*(log(1.8))^2 / 7
80/7
2*(50*log(5)+90*log(9)-140*log(7))
qnorm(0.975)
qchisq(0.95, df=1)
library(shiny); runApp('bios611-homework-fall-2019-Jianqiao-Wang/homework/hw4_app.R')
exp(-0.4284+0.5893*2.44)
0.5893 - qnorm(0.975)*0.065
0.5893 + qnorm(0.975)*0.065
0.5893^2 / 0.065^2
0.5893^2 / 0.0649^2
0.5893^2 / 0.06509^2
0.5893^2 / 0.06504^2
exp(0.5893)
install.packages('rsconnect')
rsconnect::setAccountInfo(name='jianqiao-wang', token='7B90FA1D472E3A74EC3A0910CB8479BC', secret='uytpHV4omooD/LurMPiKd6himQNoxc7Qd+jLt/2/')
shiny::runApp('bios611-projects-fall-2019-Jianqiao-Wang/project_2')
runApp('bios611-projects-fall-2019-Jianqiao-Wang/project_2')
runApp('bios611-projects-fall-2019-Jianqiao-Wang/project_2')
runApp('bios611-projects-fall-2019-Jianqiao-Wang/project_2')
runApp()
runApp('bios611-projects-fall-2019-Jianqiao-Wang/project_2')
runApp('bios611-projects-fall-2019-Jianqiao-Wang/project_2')
runApp('bios611-projects-fall-2019-Jianqiao-Wang/project_2')
runApp('bios611-projects-fall-2019-Jianqiao-Wang/project_2')
runApp('bios611-projects-fall-2019-Jianqiao-Wang/project_2')
77.2773*2
67.6717*2
for (r in c(0.25, 0.5, 0.75)) {
for (n in c(5, 10, 20, 50, 100)) {
v = (n^2) * (r^(n-1)) * ((1-r)^2) / ((1-r^n)^2)
print(r, n, v)
}
}
for (r in c(0.25, 0.5, 0.75)) {
for (n in c(5, 10, 20, 50, 100)) {
v = (n^2) * (r^(n-1)) * ((1-r)^2) / ((1-r^n)^2)
print(paste(r, n, v))
}
}
qnorm(0.975)
pnorm(1.96)
wilson <- function(n){
N = 10000
Y_b = 1:N
i = 1
while(i <= N){
X = rnorm(n)
Y = X^2
Y_b[i] = sqrt(n) * (mean(Y)^(1/3) - 1 + 2/(9*n)) / sqrt(2/9)
i = i + 1
}
return(Y_b)
}
wilson(10)
wilson_density <- function(n){
p = ggplot(mapping = aes(wilson(n))) +
geom_density() +
theme_minimal() +
xlab(expression(frac(paste(sqrt(n),'{', bar(Y)[n]^(1/3), '-', '(', 1,'-',2, '/', '(', 9, n,')', ')', '}'), sqrt(2/9)))) +
ylab('Density') +
labs(title = paste('n =', n)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.title=element_text(size=14),
axis.text=element_text(size=14),
title =element_text(size=14))
return(p)
}
wilson_density(10)
library(tidyverse)
library(ggpubr)
wilson_density(10)
x = seq(0:100, 0.1)
x = seq(0:10000) / 100
pinvgauss(0, 1)
install.packages('invgauss')
install.packages('invGauss')
library(invGauss)
pinvgauss
invgauss <- Vectorize(function(x, mu, lambda){
return(sqrt(lambda / (2*pi*(x^3))) * exp(-lambda*(x-mu)^2/(2*x*mu^2)))
})
invgauss(x)
invgauss(x, 1, 1)
y = invgauss(x, 1, 1)
plot(x, y)
x = seq(0:2000) / 100
y = invgauss(x, 1, 1)
plot(x, y)
x = seq(0:1000) / 100
y = invgauss(x, 1, 1)
plot(x, y)
x = seq(0:6000) / 1000
y = invgauss(x, 1, 1)
plot(x, y)
ggplot(aes(x=x, y=y))
ggplot(data=NULL, aes(x=x, y=y))
d = data.frame(x=x, y=y)
ggplot(d, aes(x, y))
View(d)
ggplot(d, aes(x, y)) +
geom_point()
library(tidyverse)
invgauss <- Vectorize(function(x, mu, lambda){
return(sqrt(lambda / (2*pi*(x^3))) * exp(-lambda*(x-mu)^2/(2*x*mu^2)))
})
x = seq(0:6000) / 1000
y = invgauss(x, 1, 1)
d = data.frame(x=x,
'IG(1, 1)'=invgauss(x, 1, 1),
'IG(1, 0.2)'=invgauss(x, 1, 0.2),
'IG(1, 3)'=invgauss(x, 1, 3),
'IG(3, 1)'=invgauss(x, 3, 1),
'IG(3, 3)'=invgauss(x, 3, 3))
ggplot(data=d, aes(x=x)) +
geom_line(aes(y=`IG(1, 1)`)) +
geom_line(aes(y=`IG(1, 0.2)`))
d = data.frame(x=x,
'IG(1,1)'=invgauss(x, 1, 1),
'IG(1,0.2)'=invgauss(x, 1, 0.2),
'IG(1,3)'=invgauss(x, 1, 3),
'IG(3,1)'=invgauss(x, 3, 1),
'IG(3,3)'=invgauss(x, 3, 3))
d = data.frame(x=x,
"IG(1,1)"=invgauss(x, 1, 1),
'IG(1,0.2)'=invgauss(x, 1, 0.2),
'IG(1,3)'=invgauss(x, 1, 3),
'IG(3,1)'=invgauss(x, 3, 1),
'IG(3,3)'=invgauss(x, 3, 3))
d = tibble(x=x,
"IG(1,1)"=invgauss(x, 1, 1),
'IG(1,0.2)'=invgauss(x, 1, 0.2),
'IG(1,3)'=invgauss(x, 1, 3),
'IG(3,1)'=invgauss(x, 3, 1),
'IG(3,3)'=invgauss(x, 3, 3))
c('1')
c('1')*6
replicate(3,'1')
x = seq(0:6000) / 1000
length(x)
x = seq(0:6000) / 1000
X = c(x, x, x, x, x)
Y = c(invgauss(x, 1, 1), invgauss(x, 1, 0.2), invgauss(x, 1, 3), invgauss(x, 3, 1), invgauss(x, 3, 3))
IG = c(replicate(6001, "IG(1,1)"),
replicate(6001, 'IG(1,0.2)'),
replicate(6001, 'IG(1,3)'),
replicate(6001, 'IG(3,1)'),
replicate(6001, 'IG(3,3)'))
d = tibble(X=X, Y=Y,IG=IG)
ggplot(data=d, aes(x=X, y=Y, color=IG)) +
geom_line()
d = tibble(X=X, Y=Y,"Inverse Gaussian Distribution"=IG)
ggplot(data=d, aes(x=X, y=Y, color=`Inverse Gaussian Distribution`)) +
geom_line()
d = tibble(X=X, Y=Y,"InvGaussian"=IG)
ggplot(data=d, aes(x=X, y=Y, color=InvGaussian)) +
geom_line() +
xlab('x') +
ylab('density')
ggplot(data=d, aes(x=X, y=Y, color=InvGaussian)) +
geom_line() +
xlab('x') +
ylab('density') +
theme_minimal()
ggplot(data=d, aes(x=X, y=Y, color=InvGaussian)) +
geom_line(size=2) +
xlab('x') +
ylab('density') +
theme_minimal()
ggplot(data=d, aes(x=X, y=Y, color=InvGaussian)) +
geom_line(size=1.5) +
xlab('x') +
ylab('density') +
theme_minimal()
ggplot(data=d, aes(x=X, y=Y, color=InvGaussian)) +
geom_line(size=1) +
xlab('x') +
ylab('density') +
theme_minimal()
1/1.011
1/1.375, 1/0.743
1/1.375
1/0.743
1/1.186
1/1.591
1/0.885
1/1.024
1/1.393
1/0.753
1/1.205
1/1.615
1/0.899
v=0.052412/(1.2087^2)	- 2* (-0.01356) / (-1.2087*0.3039) + 0.005318 / (0.3039^2)
v
0.362*v
log(53.365)
log(53.365) * v
log(1982)
0.362^2 *v
log(53.365) * v * log(53.365)
7.592^2 * v
(-1.1022+1.4110)/0.3823
exp((-1.1022+1.4110)/0.3823)
(-1.4110+1.3672)/0.3823
exp((-1.4110+1.3672)/0.3823)
32 +2.14+113.32+16.3+24.38+9.88+9.41+5.74+2.14+41.98+101.23+625+10.25+18.9+35+104.06+107.89+16.72+10.19+9.88+53.74+64.72+15.44+6.11+8.48+9.94+50.78
exp(-7.8227+0.8191)
exp(-7.8227+0.8191+0.1229)
exp(-7.8227+0.8191+0.0095)
0.08+0.41+0.87+0.62
exp(1.98) / (1+exp(1.98))
?factor
race = factor(c("white", "black"))
gender = factor(c("female", "male"))
party = factor(c("democrat", "republican", "independent"))
race
gender
table5.4.2 = expand.grid(race, gender, party)
View(table5.4.2)
View(table5.4.2)
table5.4.2 = expand.grid(race=race, gender=gender, party=party)
View(table5.4.2)
View(table5.4.2)
?structure
?rep
nrow(table5.4.2)
count = c(172, 56, 132, 42, 129, 4, 176, 6, 130, 15, 127, 12)
structure(table5.4.2[rep(1: 12, count),], row.names=1:12)
rep(1: 12, count)
?multinom
??multinom
library(nnet)
?multinon
?multinom
options(contrasts = c("contr.treatment", "contr.poly"))
?options
ml <- read.dta("https://stats.idre.ucla.edu/stat/data/hsbdemo.dta")
ml <- read.data("https://stats.idre.ucla.edu/stat/data/hsbdemo.dta")
ml <- read.table("https://stats.idre.ucla.edu/stat/data/hsbdemo.dta")
View(ml)
??read.dta
library(haven)
ml <- read.dta("https://stats.idre.ucla.edu/stat/data/hsbdemo.dta")
library(foreign)
ml <- read.dta("https://stats.idre.ucla.edu/stat/data/hsbdemo.dta")
ml
View(ml)
ml$prog2 <- relevel(ml$prog, ref = "academic")
structure(table5.4.2[rep(1: 12, count),], row.names=1:12)
structure(table5.4.2[rep(1: nrow(table5.4.2), count),], row.names=1:1001)
table5.4.2[rep(1: nrow(table5.4.2), count),]
?structure
fit = multinom(party~race+gender, data=table5.4.2)
summary(fit)
race = factor(c("white", "black"))
gender = factor(c("female", "male"))
party = factor(c("democrat", "republican", "independent"))
table5.4.2 = expand.grid(race=race, gender=gender, party=party)
count = c(172, 56, 132, 42, 129, 4, 176, 6, 130, 15, 127, 12)
table5.4.2 = structure(table5.4.2[rep(1: nrow(table5.4.2), count),], row.names=1:1001)
fit = multinom(party~race*gender, data=table5.4.2)
summary(fit)
fit = multinom(party~race+gender, data=table5.4.2)
summary(fit)
race = factor(c("white", "black"))
gender = factor(c("female", "male"))
party = factor(c("democrat", "republican", "independent"))
table5.4.2 = expand.grid(race=race, gender=gender, party=party)
table5.4.2$gender = relevel(table5.4.2$gender, ref='black')
table5.4.2$gender0 = relevel(table5.4.2$gender, ref='black')
table5.4.2$race = relevel(table5.4.2$race, ref='black')
count = c(172, 56, 132, 42, 129, 4, 176, 6, 130, 15, 127, 12)
table5.4.2 = structure(table5.4.2[rep(1: nrow(table5.4.2), count),], row.names=1:1001)
fit = multinom(party~race+gender, data=table5.4.2)
summary(fit)
race = factor(c("white", "black"))
gender = factor(c("female", "male"))
party = factor(c("democrat", "republican", "independent"))
table5.4.2 = expand.grid(race=race, gender=gender, party=party)
table5.4.2$race = relevel(table5.4.2$race, ref='white')
count = c(172, 56, 132, 42, 129, 4, 176, 6, 130, 15, 127, 12)
table5.4.2 = structure(table5.4.2[rep(1: nrow(table5.4.2), count),], row.names=1:1001)
fit = multinom(party~race+gender, data=table5.4.2)
summary(fit)
exp(-0.2872151)
exp(0.2872151)
exp(0.2872151+2.278130)
exp(0.2872151-0.5727605)
exp(0.2872151-0.5727605+2.278130)
0.62-0.08-0.25-1.27
exp(-0.98) / (1+exp(-0.98))
exp(2.28)
exp(-0.57)
exp(-0.16)
exp(-0.25)
exp(0l41)
exp(0.41)
Dat = data.frame(y=rnorm(10), x1=rnorm(10), x2=rnorm(10))
View(Dat)
Dat
Dat = data.frame(y=c(1, 2, 3, 4, 5), x1=c(1, 2, 3, 4, 5)+1, x2=c(1, 2, 3, 4, 5)*2)
Dat
lm(y~x, data = Dat)
Dat = data.frame(y=c(3, 2.5, 1), x=c(-1, 1.5, 4))
lm(y~x, data = Dat)
start = Sys.time()
Dat = data.frame(y=c(3, 2.5, 1), x=c(-1, 1.5, 4))
summary(lm(y~x, data = Dat))
end = Sys.time()
print(end-start)
-log(2)
-log(2) *5
start = Sys.time()
Dat = data.frame(y=c(1, 0, 0, 1, 1), x=c(2, 3, 4, 5, 6), z = c(3, 4, 2, 1, 3))
summary(glm(y~x+z, data = Dat, family=binomial(link = 'logit')))
end = Sys.time()
print(end-start)
sqrt(5.0094)
5.0094^2
1.1215^2
pnorm(0.975)
pnorm(0)
qnorm(0.975)
pchisq(0)
pchisq(0, df=1)
pchisq(0.9, df=1)
pchisq(1.5, df=1)
start = Sys.time()
Dat = data.frame(y=c(1, 0, 0, 1, 1), x=c(2, 3, 4, 5, 6), z = c(3, 4, 2, 1, 3))
summary(glm(y~x+z, data = Dat, family=binomial(link = 'logit')))
end = Sys.time()
print(end-start)
Dat = data.frame(y=c(1, 0, 0, 1, 1), x=c(2, 3, 4, 5, 6), z = c(3, 4, 2, 1, 3))
start = Sys.time()
summary(glm(y~x+z, data = Dat, family=binomial(link = 'logit')))
end = Sys.time()
print(end-start)
mydata <- read.csv("https://stats.idre.ucla.edu/stat/data/binary.csv")
View(mydata)
names(mydata)
mydata <- read.csv("https://stats.idre.ucla.edu/stat/data/binary.csv")
# Dat = data.frame(y=c(1, 0, 0, 1, 1), x=c(2, 3, 4, 5, 6), z = c(3, 4, 2, 1, 3))
start = Sys.time()
summary(glm(admit~gre+gpa+rank, data = mydata, family=binomial(link = 'logit')))
end = Sys.time()
print(end-start)
write.csv(mydata, '~/Desktop/cpp/logistic regression/logistic regression/logistic regression/')
write.csv(mydata, '~/Desktop/cpp/logistic regression/logistic regression/logistic regression/ucla.csv')
setwd("~~/Documents/GitHub/bios611-projects-fall-2019-Jianqiao-Wang/project_3/data")
setwd("~~/Documents/GitHub/bios611-projects-fall-2019-Jianqiao-Wang")
setwd("~/Documents/GitHub/bios611-projects-fall-2019-Jianqiao-Wang/project_3/data/")
data1 = read.csv("CLIENT_191102.tsv")
View(data1)
?read.csv
data1 = read.csv("CLIENT_191102.tsv", sep = "\t")
View(data1)
data1 = read_tsv("CLIENT_191102.tsv")
